plot ( logexpvalues, logpvalues, main = "homoeff qq plot", xlab = "log expected pvalues", ylab = "log homoeff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( domdev.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$domdev.pvalue ), ]
logpvalues <- - log ( sorted.frame$domdev.pvalue, 10 )
pdf ( file = paste ( "domdev qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "domdev qq plot", xlab = "log expected pvalues", ylab = "log domdev pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 10 ) )
abline ( 0, 1 )
dev.off ()
}
}
qq.plot.pvalues ( chromosome = 1,
avgeff.sig.cutoff = 1,
avgeff.plot = TRUE,
homoeff.plot = TRUE,
domdev.plot = TRUE )
setwd ( "ukb_height_gwas" )
setwd("~/R.Projects/height_associations/ukb_height_gwas")
qq.plot.pvalues <- function ( chromosome, avgeff.sig.cutoff, avgeff.plot = FALSE, homoeff.plot = FALSE, domdev.plot = FALSE ) {
#recover()
i <- chromosome
freq.frame <- paste ( "chr", i, ".frq", sep = "" )
add.frame <- paste ( "height_add_chr", i, ".assoc.linear", sep = "" )
geno.frame <- paste ( "height_geno_chr", i, ".assoc.linear", sep = "" )
freq.frame <- read.table ( freq.frame , stringsAsFactors = FALSE , header = TRUE )
add.frame <- read.table ( add.frame , stringsAsFactors = FALSE , header = TRUE )
geno.frame <- read.table ( geno.frame , stringsAsFactors = FALSE , header = TRUE )
i.frame <- data.frame ( "position" = add.frame [ , c ( 3 ) ],
"frequency" = freq.frame [ , c ( 5 ) ],
"avg.effect" = add.frame [ , c( 7 ) ],
"pvalue" = add.frame [ , c( 9 ) ],
"homozygous.effect" = geno.frame [ geno.frame$TEST == "ADD", c( 7 ) ],
"homoeff.pvalue" = geno.frame [ geno.frame$TEST == "ADD", c( 9 ) ],
"dominance.deviation " = geno.frame [ geno.frame$TEST == "DOMDEV", c( 7 ) ],
"domdev.pvalue" = geno.frame [ geno.frame$TEST == "DOMDEV", c( 9 ) ] )
avgeff.sig <- i.frame [ i.frame$homoeff.pvalue < avgeff.sig.cutoff, ]
logexpvalues <- - log ( ppoints ( nrow ( avgeff.sig ) ), 10 )
setwd ( "qq.plots" )
if ( avgeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$pvalue ), ]
logpvalues <- - log ( sorted.frame$pvalue, 10 )
pdf ( file = paste ( "avgeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "average effect qq plot", xlab = "log expected pvalues", ylab = "log avg eff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( homoeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$homoeff.pvalue ), ]
logpvalues <- - log ( sorted.frame$homoeff.pvalue, 10 )
pdf ( file = paste ( "homoeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "homoeff qq plot", xlab = "log expected pvalues", ylab = "log homoeff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( domdev.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$domdev.pvalue ), ]
logpvalues <- - log ( sorted.frame$domdev.pvalue, 10 )
pdf ( file = paste ( "domdev qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "domdev qq plot", xlab = "log expected pvalues", ylab = "log domdev pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 10 ) )
abline ( 0, 1 )
dev.off ()
}
}
for ( i in c ( 10^-8, 1 ) ) {
for ( j in 1:22 )
qq.plot.pvalues ( chromosome = j,
avgeff.sig.cutoff = i,
avgeff.plot = TRUE,
homoeff.plot = TRUE,
domdev.plot = TRUE )
}
qq.plot.pvalues <- function ( chromosome, avgeff.sig.cutoff, avgeff.plot = FALSE, homoeff.plot = FALSE, domdev.plot = FALSE ) {
#recover()
i <- chromosome
freq.frame <- paste ( "chr", i, ".frq", sep = "" )
add.frame <- paste ( "height_add_chr", i, ".assoc.linear", sep = "" )
geno.frame <- paste ( "height_geno_chr", i, ".assoc.linear", sep = "" )
freq.frame <- read.table ( freq.frame , stringsAsFactors = FALSE , header = TRUE )
add.frame <- read.table ( add.frame , stringsAsFactors = FALSE , header = TRUE )
geno.frame <- read.table ( geno.frame , stringsAsFactors = FALSE , header = TRUE )
i.frame <- data.frame ( "position" = add.frame [ , c ( 3 ) ],
"frequency" = freq.frame [ , c ( 5 ) ],
"avg.effect" = add.frame [ , c( 7 ) ],
"pvalue" = add.frame [ , c( 9 ) ],
"homozygous.effect" = geno.frame [ geno.frame$TEST == "ADD", c( 7 ) ],
"homoeff.pvalue" = geno.frame [ geno.frame$TEST == "ADD", c( 9 ) ],
"dominance.deviation " = geno.frame [ geno.frame$TEST == "DOMDEV", c( 7 ) ],
"domdev.pvalue" = geno.frame [ geno.frame$TEST == "DOMDEV", c( 9 ) ] )
avgeff.sig <- i.frame [ i.frame$homoeff.pvalue < avgeff.sig.cutoff, ]
logexpvalues <- - log ( ppoints ( nrow ( avgeff.sig ) ), 10 )
if ( avgeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$pvalue ), ]
logpvalues <- - log ( sorted.frame$pvalue, 10 )
pdf ( file = paste ( "avgeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "average effect qq plot", xlab = "log expected pvalues", ylab = "log avg eff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( homoeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$homoeff.pvalue ), ]
logpvalues <- - log ( sorted.frame$homoeff.pvalue, 10 )
pdf ( file = paste ( "homoeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "homoeff qq plot", xlab = "log expected pvalues", ylab = "log homoeff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( domdev.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$domdev.pvalue ), ]
logpvalues <- - log ( sorted.frame$domdev.pvalue, 10 )
pdf ( file = paste ( "domdev qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "domdev qq plot", xlab = "log expected pvalues", ylab = "log domdev pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 10 ) )
abline ( 0, 1 )
dev.off ()
}
}
setwd("~/R.Projects/height_associations/ukb_height_gwas")
qq.plot.pvalues <- function ( chromosome, avgeff.sig.cutoff, avgeff.plot = FALSE, homoeff.plot = FALSE, domdev.plot = FALSE ) {
#recover()
i <- chromosome
freq.frame <- paste ( "chr", i, ".frq", sep = "" )
add.frame <- paste ( "height_add_chr", i, ".assoc.linear", sep = "" )
geno.frame <- paste ( "height_geno_chr", i, ".assoc.linear", sep = "" )
freq.frame <- read.table ( freq.frame , stringsAsFactors = FALSE , header = TRUE )
add.frame <- read.table ( add.frame , stringsAsFactors = FALSE , header = TRUE )
geno.frame <- read.table ( geno.frame , stringsAsFactors = FALSE , header = TRUE )
i.frame <- data.frame ( "position" = add.frame [ , c ( 3 ) ],
"frequency" = freq.frame [ , c ( 5 ) ],
"avg.effect" = add.frame [ , c( 7 ) ],
"pvalue" = add.frame [ , c( 9 ) ],
"homozygous.effect" = geno.frame [ geno.frame$TEST == "ADD", c( 7 ) ],
"homoeff.pvalue" = geno.frame [ geno.frame$TEST == "ADD", c( 9 ) ],
"dominance.deviation " = geno.frame [ geno.frame$TEST == "DOMDEV", c( 7 ) ],
"domdev.pvalue" = geno.frame [ geno.frame$TEST == "DOMDEV", c( 9 ) ] )
avgeff.sig <- i.frame [ i.frame$homoeff.pvalue < avgeff.sig.cutoff, ]
logexpvalues <- - log ( ppoints ( nrow ( avgeff.sig ) ), 10 )
if ( avgeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$pvalue ), ]
logpvalues <- - log ( sorted.frame$pvalue, 10 )
pdf ( file = paste ( "avgeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "average effect qq plot", xlab = "log expected pvalues", ylab = "log avg eff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( homoeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$homoeff.pvalue ), ]
logpvalues <- - log ( sorted.frame$homoeff.pvalue, 10 )
pdf ( file = paste ( "homoeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "homoeff qq plot", xlab = "log expected pvalues", ylab = "log homoeff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( domdev.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$domdev.pvalue ), ]
logpvalues <- - log ( sorted.frame$domdev.pvalue, 10 )
pdf ( file = paste ( "domdev qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "domdev qq plot", xlab = "log expected pvalues", ylab = "log domdev pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 10 ) )
abline ( 0, 1 )
dev.off ()
}
}
for ( i in c ( 10^-8, 1 ) ) {
for ( j in 1:22 )
qq.plot.pvalues ( chromosome = j,
avgeff.sig.cutoff = i,
avgeff.plot = TRUE,
homoeff.plot = TRUE,
domdev.plot = TRUE )
}
qq.plot.pvalues <- function ( chromosome, avgeff.sig.cutoff, avgeff.plot = FALSE, homoeff.plot = FALSE, domdev.plot = FALSE ) {
#recover()
i <- chromosome
freq.frame <- paste ( "chr", i, ".frq", sep = "" )
add.frame <- paste ( "height_add_chr", i, ".assoc.linear", sep = "" )
geno.frame <- paste ( "height_geno_chr", i, ".assoc.linear", sep = "" )
freq.frame <- read.table ( freq.frame , stringsAsFactors = FALSE , header = TRUE )
add.frame <- read.table ( add.frame , stringsAsFactors = FALSE , header = TRUE )
geno.frame <- read.table ( geno.frame , stringsAsFactors = FALSE , header = TRUE )
i.frame <- data.frame ( "position" = add.frame [ , c ( 3 ) ],
"frequency" = freq.frame [ , c ( 5 ) ],
"avg.effect" = add.frame [ , c( 7 ) ],
"pvalue" = add.frame [ , c( 9 ) ],
"homozygous.effect" = geno.frame [ geno.frame$TEST == "ADD", c( 7 ) ],
"homoeff.pvalue" = geno.frame [ geno.frame$TEST == "ADD", c( 9 ) ],
"dominance.deviation " = geno.frame [ geno.frame$TEST == "DOMDEV", c( 7 ) ],
"domdev.pvalue" = geno.frame [ geno.frame$TEST == "DOMDEV", c( 9 ) ] )
avgeff.sig <- i.frame [ i.frame$pvalue < avgeff.sig.cutoff, ]
logexpvalues <- - log ( ppoints ( nrow ( avgeff.sig ) ), 10 )
if ( avgeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$pvalue ), ]
logpvalues <- - log ( sorted.frame$pvalue, 10 )
pdf ( file = paste ( "avgeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "average effect qq plot", xlab = "log expected pvalues", ylab = "log avg eff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( homoeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$homoeff.pvalue ), ]
logpvalues <- - log ( sorted.frame$homoeff.pvalue, 10 )
pdf ( file = paste ( "homoeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "homoeff qq plot", xlab = "log expected pvalues", ylab = "log homoeff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( domdev.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$domdev.pvalue ), ]
logpvalues <- - log ( sorted.frame$domdev.pvalue, 10 )
pdf ( file = paste ( "domdev qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "domdev qq plot", xlab = "log expected pvalues", ylab = "log domdev pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 10 ) )
abline ( 0, 1 )
dev.off ()
}
}
qq.plot.pvalues <- function ( chromosome, avgeff.sig.cutoff, avgeff.plot = FALSE, homoeff.plot = FALSE, domdev.plot = FALSE ) {
#recover()
setwd( "~/R.Projects/height_associations/ukb_height_gwas" )
i <- chromosome
freq.frame <- paste ( "chr", i, ".frq", sep = "" )
add.frame <- paste ( "height_add_chr", i, ".assoc.linear", sep = "" )
geno.frame <- paste ( "height_geno_chr", i, ".assoc.linear", sep = "" )
freq.frame <- read.table ( freq.frame , stringsAsFactors = FALSE , header = TRUE )
add.frame <- read.table ( add.frame , stringsAsFactors = FALSE , header = TRUE )
geno.frame <- read.table ( geno.frame , stringsAsFactors = FALSE , header = TRUE )
i.frame <- data.frame ( "position" = add.frame [ , c ( 3 ) ],
"frequency" = freq.frame [ , c ( 5 ) ],
"avg.effect" = add.frame [ , c( 7 ) ],
"pvalue" = add.frame [ , c( 9 ) ],
"homozygous.effect" = geno.frame [ geno.frame$TEST == "ADD", c( 7 ) ],
"homoeff.pvalue" = geno.frame [ geno.frame$TEST == "ADD", c( 9 ) ],
"dominance.deviation " = geno.frame [ geno.frame$TEST == "DOMDEV", c( 7 ) ],
"domdev.pvalue" = geno.frame [ geno.frame$TEST == "DOMDEV", c( 9 ) ] )
avgeff.sig <- i.frame [ i.frame$pvalue < avgeff.sig.cutoff, ]
logexpvalues <- - log ( ppoints ( nrow ( avgeff.sig ) ), 10 )
if ( avgeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$pvalue ), ]
logpvalues <- - log ( sorted.frame$pvalue, 10 )
pdf ( file = paste ( "avgeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "average effect qq plot", xlab = "log expected pvalues", ylab = "log avg eff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( homoeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$homoeff.pvalue ), ]
logpvalues <- - log ( sorted.frame$homoeff.pvalue, 10 )
pdf ( file = paste ( "homoeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "homoeff qq plot", xlab = "log expected pvalues", ylab = "log homoeff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( domdev.plot ) {
setwd ( "domdev.qqplots" )
sorted.frame <- avgeff.sig [ order( avgeff.sig$domdev.pvalue ), ]
logpvalues <- - log ( sorted.frame$domdev.pvalue, 10 )
pdf ( file = paste ( "domdev qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "domdev qq plot", xlab = "log expected pvalues", ylab = "log domdev pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 10 ) )
abline ( 0, 1 )
dev.off ()
}
}
qq.plot.pvalues <- function ( chromosome, avgeff.sig.cutoff, avgeff.plot = FALSE, homoeff.plot = FALSE, domdev.plot = FALSE ) {
#recover()
setwd( "~/R.Projects/height_associations/ukb_height_gwas" )
i <- chromosome
freq.frame <- paste ( "chr", i, ".frq", sep = "" )
add.frame <- paste ( "height_add_chr", i, ".assoc.linear", sep = "" )
geno.frame <- paste ( "height_geno_chr", i, ".assoc.linear", sep = "" )
freq.frame <- read.table ( freq.frame , stringsAsFactors = FALSE , header = TRUE )
add.frame <- read.table ( add.frame , stringsAsFactors = FALSE , header = TRUE )
geno.frame <- read.table ( geno.frame , stringsAsFactors = FALSE , header = TRUE )
i.frame <- data.frame ( "position" = add.frame [ , c ( 3 ) ],
"frequency" = freq.frame [ , c ( 5 ) ],
"avg.effect" = add.frame [ , c( 7 ) ],
"pvalue" = add.frame [ , c( 9 ) ],
"homozygous.effect" = geno.frame [ geno.frame$TEST == "ADD", c( 7 ) ],
"homoeff.pvalue" = geno.frame [ geno.frame$TEST == "ADD", c( 9 ) ],
"dominance.deviation " = geno.frame [ geno.frame$TEST == "DOMDEV", c( 7 ) ],
"domdev.pvalue" = geno.frame [ geno.frame$TEST == "DOMDEV", c( 9 ) ] )
avgeff.sig <- i.frame [ i.frame$pvalue < avgeff.sig.cutoff, ]
logexpvalues <- - log ( ppoints ( nrow ( avgeff.sig ) ), 10 )
if ( avgeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$pvalue ), ]
logpvalues <- - log ( sorted.frame$pvalue, 10 )
pdf ( file = paste ( "avgeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "average effect qq plot", xlab = "log expected pvalues", ylab = "log avg eff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( homoeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$homoeff.pvalue ), ]
logpvalues <- - log ( sorted.frame$homoeff.pvalue, 10 )
pdf ( file = paste ( "homoeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "homoeff qq plot", xlab = "log expected pvalues", ylab = "log homoeff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( domdev.plot ) {
setwd ( "domdev.qqplots" )
sorted.frame <- avgeff.sig [ order( avgeff.sig$domdev.pvalue ), ]
logpvalues <- - log ( sorted.frame$domdev.pvalue, 10 )
pdf ( file = paste ( "domdev qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "domdev qq plot", xlab = "log expected pvalues", ylab = "log domdev pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 10 ) )
abline ( 0, 1 )
dev.off ()
}
}
qq.plot.pvalues ( chromosome = 1,
avgeff.sig.cutoff = 1,
avgeff.plot = FALSE,
homoeff.plot = FALSE,
domdev.plot = TRUE )
qq.plot.pvalues ( chromosome = 1,
avgeff.sig.cutoff = 10^-8,
avgeff.plot = FALSE,
homoeff.plot = FALSE,
domdev.plot = TRUE )
for ( i in c ( 10^-8, 1 ) ) {
for ( j in 1:22 )
qq.plot.pvalues ( chromosome = j,
avgeff.sig.cutoff = i,
avgeff.plot = FALSE,
homoeff.plot = FALSE,
domdev.plot = TRUE )
}
qq.plot.pvalues <- function ( chromosome, avgeff.sig.cutoff, avgeff.plot = FALSE, homoeff.plot = FALSE, domdev.plot = FALSE ) {
#recover()
setwd( "~/R.Projects/height_associations/ukb_height_gwas" )
i <- chromosome
freq.frame <- paste ( "chr", i, ".frq", sep = "" )
add.frame <- paste ( "height_add_chr", i, ".assoc.linear", sep = "" )
geno.frame <- paste ( "height_geno_chr", i, ".assoc.linear", sep = "" )
freq.frame <- read.table ( freq.frame , stringsAsFactors = FALSE , header = TRUE )
add.frame <- read.table ( add.frame , stringsAsFactors = FALSE , header = TRUE )
geno.frame <- read.table ( geno.frame , stringsAsFactors = FALSE , header = TRUE )
i.frame <- data.frame ( "position" = add.frame [ , c ( 3 ) ],
"frequency" = freq.frame [ , c ( 5 ) ],
"avg.effect" = add.frame [ , c( 7 ) ],
"pvalue" = add.frame [ , c( 9 ) ],
"homozygous.effect" = geno.frame [ geno.frame$TEST == "ADD", c( 7 ) ],
"homoeff.pvalue" = geno.frame [ geno.frame$TEST == "ADD", c( 9 ) ],
"dominance.deviation " = geno.frame [ geno.frame$TEST == "DOMDEV", c( 7 ) ],
"domdev.pvalue" = geno.frame [ geno.frame$TEST == "DOMDEV", c( 9 ) ] )
avgeff.sig <- i.frame [ i.frame$pvalue < avgeff.sig.cutoff, ]
logexpvalues <- - log ( ppoints ( nrow ( avgeff.sig ) ), 10 )
if ( avgeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$pvalue ), ]
logpvalues <- - log ( sorted.frame$pvalue, 10 )
pdf ( file = paste ( "avgeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "average effect qq plot", xlab = "log expected pvalues", ylab = "log avg eff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( homoeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$homoeff.pvalue ), ]
logpvalues <- - log ( sorted.frame$homoeff.pvalue, 10 )
pdf ( file = paste ( "homoeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "homoeff qq plot", xlab = "log expected pvalues", ylab = "log homoeff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( domdev.plot ) {
setwd ( "domdev.qqplots" )
sorted.frame <- avgeff.sig [ order( avgeff.sig$domdev.pvalue ), ]
logpvalues <- - log ( sorted.frame$domdev.pvalue, 10 )
pdf ( file = paste ( "chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "domdev qq plot", xlab = "log expected pvalues", ylab = "log domdev pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 10 ) )
abline ( 0, 1 )
dev.off ()
}
}
qq.plot.pvalues ( chromosome = 1,
avgeff.sig.cutoff = 10^-8,
avgeff.plot = FALSE,
homoeff.plot = FALSE,
domdev.plot = TRUE )
for ( i in c ( 10^-8, 1 ) ) {
for ( j in 1:22 )
qq.plot.pvalues ( chromosome = j,
avgeff.sig.cutoff = i,
avgeff.plot = FALSE,
homoeff.plot = FALSE,
domdev.plot = TRUE )
}
qq.plot.pvalues <- function ( chromosome, avgeff.sig.cutoff, avgeff.plot = FALSE, homoeff.plot = FALSE, domdev.plot = FALSE ) {
#recover()
setwd( "~/R.Projects/height_associations/ukb_height_gwas" )
i <- chromosome
freq.frame <- paste ( "chr", i, ".frq", sep = "" )
add.frame <- paste ( "height_add_chr", i, ".assoc.linear", sep = "" )
geno.frame <- paste ( "height_geno_chr", i, ".assoc.linear", sep = "" )
freq.frame <- read.table ( freq.frame , stringsAsFactors = FALSE , header = TRUE )
add.frame <- read.table ( add.frame , stringsAsFactors = FALSE , header = TRUE )
geno.frame <- read.table ( geno.frame , stringsAsFactors = FALSE , header = TRUE )
i.frame <- data.frame ( "position" = add.frame [ , c ( 3 ) ],
"frequency" = freq.frame [ , c ( 5 ) ],
"avg.effect" = add.frame [ , c( 7 ) ],
"pvalue" = add.frame [ , c( 9 ) ],
"homozygous.effect" = geno.frame [ geno.frame$TEST == "ADD", c( 7 ) ],
"homoeff.pvalue" = geno.frame [ geno.frame$TEST == "ADD", c( 9 ) ],
"dominance.deviation " = geno.frame [ geno.frame$TEST == "DOMDEV", c( 7 ) ],
"domdev.pvalue" = geno.frame [ geno.frame$TEST == "DOMDEV", c( 9 ) ] )
avgeff.sig <- i.frame [ i.frame$pvalue < avgeff.sig.cutoff, ]
logexpvalues <- - log ( ppoints ( nrow ( avgeff.sig ) ), 10 )
if ( avgeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$pvalue ), ]
logpvalues <- - log ( sorted.frame$pvalue, 10 )
pdf ( file = paste ( "avgeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "average effect qq plot", xlab = "log expected pvalues", ylab = "log avg eff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( homoeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$homoeff.pvalue ), ]
logpvalues <- - log ( sorted.frame$homoeff.pvalue, 10 )
pdf ( file = paste ( "homoeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "homoeff qq plot", xlab = "log expected pvalues", ylab = "log homoeff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( domdev.plot ) {
setwd ( "domdev.qqplots" )
sorted.frame <- avgeff.sig [ order( avgeff.sig$domdev.pvalue ), ]
logpvalues <- - log ( sorted.frame$domdev.pvalue, 10 )
pdf ( file = paste ( "chromosome", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "domdev qq plot", xlab = "log expected pvalues", ylab = "log domdev pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 10 ) )
abline ( 0, 1 )
dev.off ()
}
}
qq.plot.pvalues <- function ( chromosome, avgeff.sig.cutoff, avgeff.plot = FALSE, homoeff.plot = FALSE, domdev.plot = FALSE ) {
#recover()
setwd( "~/R.Projects/height_associations/ukb_height_gwas" )
i <- chromosome
freq.frame <- paste ( "chr", i, ".frq", sep = "" )
add.frame <- paste ( "height_add_chr", i, ".assoc.linear", sep = "" )
geno.frame <- paste ( "height_geno_chr", i, ".assoc.linear", sep = "" )
freq.frame <- read.table ( freq.frame , stringsAsFactors = FALSE , header = TRUE )
add.frame <- read.table ( add.frame , stringsAsFactors = FALSE , header = TRUE )
geno.frame <- read.table ( geno.frame , stringsAsFactors = FALSE , header = TRUE )
i.frame <- data.frame ( "position" = add.frame [ , c ( 3 ) ],
"frequency" = freq.frame [ , c ( 5 ) ],
"avg.effect" = add.frame [ , c( 7 ) ],
"pvalue" = add.frame [ , c( 9 ) ],
"homozygous.effect" = geno.frame [ geno.frame$TEST == "ADD", c( 7 ) ],
"homoeff.pvalue" = geno.frame [ geno.frame$TEST == "ADD", c( 9 ) ],
"dominance.deviation " = geno.frame [ geno.frame$TEST == "DOMDEV", c( 7 ) ],
"domdev.pvalue" = geno.frame [ geno.frame$TEST == "DOMDEV", c( 9 ) ] )
avgeff.sig <- i.frame [ i.frame$pvalue < avgeff.sig.cutoff, ]
logexpvalues <- - log ( ppoints ( nrow ( avgeff.sig ) ), 10 )
if ( avgeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$pvalue ), ]
logpvalues <- - log ( sorted.frame$pvalue, 10 )
pdf ( file = paste ( "avgeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "average effect qq plot", xlab = "-log expected pvalues", ylab = "-log avg eff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( homoeff.plot ) {
sorted.frame <- avgeff.sig [ order( avgeff.sig$homoeff.pvalue ), ]
logpvalues <- - log ( sorted.frame$homoeff.pvalue, 10 )
pdf ( file = paste ( "homoeff qq plot, chromosome ", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "homoeff qq plot", xlab = "-log expected pvalues", ylab = "-log homoeff pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 80 ) )
abline ( 0, 1 )
dev.off ()
}
if ( domdev.plot ) {
setwd ( "domdev.qqplots" )
sorted.frame <- avgeff.sig [ order( avgeff.sig$domdev.pvalue ), ]
logpvalues <- - log ( sorted.frame$domdev.pvalue, 10 )
pdf ( file = paste ( "chromosome", chromosome, ", avgeff cutoff = ", avgeff.sig.cutoff ) )
plot ( logexpvalues, logpvalues, main = "domdev qq plot", xlab = "-log expected pvalues", ylab = "-log domdev pvalues",
pch = 20, col = rgb ( 0, 0, 0, 0.2 ), xlim = c( 0, 10 ), ylim = c( 0, 10 ) )
abline ( 0, 1 )
dev.off ()
}
}
for ( i in c ( 10^-8, 1 ) ) {
for ( j in 1:22 )
qq.plot.pvalues ( chromosome = j,
avgeff.sig.cutoff = i,
avgeff.plot = FALSE,
homoeff.plot = FALSE,
domdev.plot = TRUE )
}
